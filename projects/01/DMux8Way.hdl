// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *																  010
 *																  011
 *																  100
 *																  101
 *																  110
 *
 *
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	
	DMux4Way ( in = in, sel = sel[0..1], a = ta, b = tb, c = tc, d = td );
	DMux4Way ( in = in, sel = sel[0..1], a = te, b = tf, c = tg, d = th );
	
	DMux ( in = in, sel = sel[2], a = va, b = ve );
	DMux ( in = in, sel = sel[2], a = vb, b = vf );
	DMux ( in = in, sel = sel[2], a = vc, b = vg );
	DMux ( in = in, sel = sel[2], a = vd, b = vh );
	
	And ( a = ta, b = va, out = a);
	And ( a = tb, b = vb, out = b);
	And ( a = tc, b = vc, out = c);
	And ( a = td, b = vd, out = d);
	And ( a = te, b = ve, out = e);
	And ( a = tf, b = vf, out = f);
	And ( a = tg, b = vg, out = g);
	And ( a = th, b = vh, out = h);
	
	
}